-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    10.0a/269363 Production Release
--  HLS Date:       Wed Nov  9 17:38:00 PST 2016
-- 
--  Generated by:   xph3sle509@ocaepc57
--  Generated date: Mon Jan 29 11:55:56 2018
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    Xilinx_RAMS_BLOCK_1R1W_RBW_wport_32_17_66880_2_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY Xilinx_RAMS_BLOCK_1R1W_RBW_wport_32_17_66880_2_gen IS
  PORT(
    we : OUT STD_LOGIC;
    d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    wadr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    wadr_d : IN STD_LOGIC_VECTOR (16 DOWNTO 0);
    d_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    we_d : IN STD_LOGIC
  );
END Xilinx_RAMS_BLOCK_1R1W_RBW_wport_32_17_66880_2_gen;

ARCHITECTURE v1 OF Xilinx_RAMS_BLOCK_1R1W_RBW_wport_32_17_66880_2_gen IS
  -- Default Constants

BEGIN
  -- Default Constant Signal Assignments

  we <= (we_d);
  d <= (d_d);
  wadr <= (wadr_d);
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    Xilinx_RAMS_BLOCK_1R1W_RBW_rport_32_17_66880_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY Xilinx_RAMS_BLOCK_1R1W_RBW_rport_32_17_66880_1_gen IS
  PORT(
    re : OUT STD_LOGIC;
    q : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    radr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    radr_d : IN STD_LOGIC_VECTOR (16 DOWNTO 0);
    re_d : IN STD_LOGIC;
    q_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
  );
END Xilinx_RAMS_BLOCK_1R1W_RBW_rport_32_17_66880_1_gen;

ARCHITECTURE v1 OF Xilinx_RAMS_BLOCK_1R1W_RBW_rport_32_17_66880_1_gen IS
  -- Default Constants

BEGIN
  -- Default Constant Signal Assignments

  re <= (re_d);
  q_d <= q;
  radr <= (radr_d);
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    conv_core_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY conv_core_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
    for_for_C_2_tr0 : IN STD_LOGIC;
    for_C_0_tr0 : IN STD_LOGIC
  );
END conv_core_core_fsm;

ARCHITECTURE v1 OF conv_core_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for conv_core_core_fsm_1
  TYPE conv_core_core_fsm_1_ST IS (main_C_0, for_for_C_0, for_for_C_1, for_for_C_2,
      for_C_0, main_C_1);

  SIGNAL state_var : conv_core_core_fsm_1_ST;
  SIGNAL state_var_NS : conv_core_core_fsm_1_ST;

BEGIN
  -- Default Constant Signal Assignments

  conv_core_core_fsm_1 : PROCESS (for_for_C_2_tr0, for_C_0_tr0, state_var)
  BEGIN
    CASE state_var IS
      WHEN for_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000010");
        state_var_NS <= for_for_C_1;
      WHEN for_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "000100");
        state_var_NS <= for_for_C_2;
      WHEN for_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "001000");
        IF ( for_for_C_2_tr0 = '1' ) THEN
          state_var_NS <= for_C_0;
        ELSE
          state_var_NS <= for_for_C_0;
        END IF;
      WHEN for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "010000");
        IF ( for_C_0_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= for_for_C_0;
        END IF;
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "100000");
        state_var_NS <= main_C_0;
      -- main_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "000001");
        state_var_NS <= for_for_C_0;
    END CASE;
  END PROCESS conv_core_core_fsm_1;

  conv_core_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= main_C_0;
      ELSE
        state_var <= state_var_NS;
      END IF;
    END IF;
  END PROCESS conv_core_core_fsm_1_REG;

END v1;

-- ------------------------------------------------------------------
--  Design Unit:    conv_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY conv_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    image_in_rsc_triosy_lz : OUT STD_LOGIC;
    image_out_rsc_triosy_lz : OUT STD_LOGIC;
    image_in_rsci_radr_d : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    image_in_rsci_re_d : OUT STD_LOGIC;
    image_in_rsci_q_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    image_out_rsci_wadr_d : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    image_out_rsci_d_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    image_out_rsci_we_d : OUT STD_LOGIC
  );
END conv_core;

ARCHITECTURE v1 OF conv_core IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL fsm_output : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL for_i_7_0_sva_3 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL for_for_j_8_0_sva_3 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_acc_1_cse_sva : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL for_for_j_8_0_sva_4 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_slc_for_for_acc_3_itm : STD_LOGIC;
  SIGNAL or_2_cse : STD_LOGIC;
  SIGNAL reg_image_out_rsc_triosy_obj_ld_cse : STD_LOGIC;
  SIGNAL for_for_for_for_acc_1_cse_sva_mx0w1 : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL for_i_7_0_sva_1 : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL for_for_j_8_0_sva_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_acc_itm_8 : STD_LOGIC;

  SIGNAL not_nl : STD_LOGIC;
  SIGNAL for_for_acc_nl : STD_LOGIC_VECTOR (3 DOWNTO 0);
  SIGNAL for_for_mul_1_nl : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL for_acc_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_and_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL for_for_acc_4_nl : STD_LOGIC_VECTOR (23 DOWNTO 0);
  SIGNAL for_i_for_i_nor_nl : STD_LOGIC_VECTOR (7 DOWNTO 0);
  SIGNAL for_i_not_nl : STD_LOGIC;
  COMPONENT conv_core_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (5 DOWNTO 0);
      for_for_C_2_tr0 : IN STD_LOGIC;
      for_C_0_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL conv_core_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (5 DOWNTO 0);
  SIGNAL conv_core_core_fsm_inst_for_for_C_2_tr0 : STD_LOGIC;
  SIGNAL conv_core_core_fsm_inst_for_C_0_tr0 : STD_LOGIC;

  FUNCTION MUX_v_17_2_2(input_0 : STD_LOGIC_VECTOR(16 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(16 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(16 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(16 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_24_2_2(input_0 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(23 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(23 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(23 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_8_2_2(input_0 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(7 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(7 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(7 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_9_2_2(input_0 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(8 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(8 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(8 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  -- Default Constant Signal Assignments

  image_in_rsc_triosy_obj : mgc_hls.mgc_ioport_comps_v11.mgc_io_sync_v1
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_image_out_rsc_triosy_obj_ld_cse,
      lz => image_in_rsc_triosy_lz
    );
  image_out_rsc_triosy_obj : mgc_hls.mgc_ioport_comps_v11.mgc_io_sync_v1
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_image_out_rsc_triosy_obj_ld_cse,
      lz => image_out_rsc_triosy_lz
    );
  conv_core_core_fsm_inst : conv_core_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      fsm_output => conv_core_core_fsm_inst_fsm_output,
      for_for_C_2_tr0 => conv_core_core_fsm_inst_for_for_C_2_tr0,
      for_C_0_tr0 => conv_core_core_fsm_inst_for_C_0_tr0
    );
  fsm_output <= conv_core_core_fsm_inst_fsm_output;
  conv_core_core_fsm_inst_for_for_C_2_tr0 <= NOT for_for_slc_for_for_acc_3_itm;
  conv_core_core_fsm_inst_for_C_0_tr0 <= NOT for_acc_itm_8;

  or_2_cse <= (fsm_output(0)) OR (fsm_output(4));
  for_i_7_0_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_i_7_0_sva_3) + UNSIGNED'(
      "00000001"), 8));
  for_for_mul_1_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(for_for_j_8_0_sva_3)
      * UNSIGNED'( "11010001")), 17));
  for_for_for_for_acc_1_cse_sva_mx0w1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(for_for_mul_1_nl),
      17) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(for_i_7_0_sva_3), 8), 17), 17));
  for_for_j_8_0_sva_1 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_j_8_0_sva_3)
      + UNSIGNED'( "000000001"), 9));
  for_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(for_i_7_0_sva_1),
      8), 9) + SIGNED'( "100101111"), 9));
  for_acc_itm_8 <= readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_acc_nl), 9)),
      8);
  image_in_rsci_radr_d <= MUX_v_17_2_2(STD_LOGIC_VECTOR'("00000000000000000"), for_for_for_for_acc_1_cse_sva_mx0w1,
      (fsm_output(1)));
  image_in_rsci_re_d <= fsm_output(1);
  image_out_rsci_wadr_d <= MUX_v_17_2_2(STD_LOGIC_VECTOR'("00000000000000000"), for_for_for_for_acc_1_cse_sva,
      (fsm_output(2)));
  for_for_acc_4_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED( -SIGNED(image_in_rsci_q_d(31
      DOWNTO 8)), 24));
  for_for_for_for_and_nl <= MUX_v_24_2_2(STD_LOGIC_VECTOR'("000000000000000000000000"),
      STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_acc_4_nl), 24)), (fsm_output(2)));
  for_i_not_nl <= NOT (fsm_output(2));
  for_i_for_i_nor_nl <= NOT(MUX_v_8_2_2((image_in_rsci_q_d(7 DOWNTO 0)), STD_LOGIC_VECTOR'("11111111"),
      for_i_not_nl));
  image_out_rsci_d_d <= for_for_for_for_and_nl & for_i_for_i_nor_nl;
  image_out_rsci_we_d <= fsm_output(2);
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_i_7_0_sva_3 <= STD_LOGIC_VECTOR'( "00000000");
      ELSIF ( or_2_cse = '1' ) THEN
        for_i_7_0_sva_3 <= MUX_v_8_2_2(STD_LOGIC_VECTOR'("00000000"), for_i_7_0_sva_1,
            (fsm_output(4)));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_j_8_0_sva_3 <= STD_LOGIC_VECTOR'( "000000000");
        reg_image_out_rsc_triosy_obj_ld_cse <= '0';
        for_for_for_for_acc_1_cse_sva <= STD_LOGIC_VECTOR'( "00000000000000000");
      ELSE
        for_for_j_8_0_sva_3 <= MUX_v_9_2_2(STD_LOGIC_VECTOR'("000000000"), for_for_j_8_0_sva_4,
            not_nl);
        reg_image_out_rsc_triosy_obj_ld_cse <= (NOT for_acc_itm_8) AND (fsm_output(4));
        for_for_for_for_acc_1_cse_sva <= for_for_for_for_acc_1_cse_sva_mx0w1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_slc_for_for_acc_3_itm <= '0';
      ELSIF ( (fsm_output(1)) = '1' ) THEN
        for_for_slc_for_for_acc_3_itm <= readindex(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_for_acc_nl),
            4)), 3);
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_j_8_0_sva_4 <= STD_LOGIC_VECTOR'( "000000000");
      ELSIF ( (fsm_output(1)) = '1' ) THEN
        for_for_j_8_0_sva_4 <= for_for_j_8_0_sva_1;
      END IF;
    END IF;
  END PROCESS;
  not_nl <= NOT or_2_cse;
  for_for_acc_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(for_for_j_8_0_sva_1(8
      DOWNTO 6)), 3), 4) + SIGNED'( "1011"), 4));
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    conv
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY conv IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    image_in_rsc_radr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    image_in_rsc_q : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    image_in_rsc_re : OUT STD_LOGIC;
    image_in_rsc_triosy_lz : OUT STD_LOGIC;
    image_out_rsc_wadr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    image_out_rsc_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    image_out_rsc_we : OUT STD_LOGIC;
    image_out_rsc_triosy_lz : OUT STD_LOGIC
  );
END conv;

ARCHITECTURE v1 OF conv IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL image_in_rsci_radr_d : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL image_in_rsci_re_d : STD_LOGIC;
  SIGNAL image_in_rsci_q_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL image_out_rsci_wadr_d : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL image_out_rsci_d_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL image_out_rsci_we_d : STD_LOGIC;

  COMPONENT Xilinx_RAMS_BLOCK_1R1W_RBW_rport_32_17_66880_1_gen
    PORT(
      re : OUT STD_LOGIC;
      q : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      radr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      radr_d : IN STD_LOGIC_VECTOR (16 DOWNTO 0);
      re_d : IN STD_LOGIC;
      q_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL image_in_rsci_q : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL image_in_rsci_radr : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL image_in_rsci_radr_d_1 : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL image_in_rsci_q_d_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT Xilinx_RAMS_BLOCK_1R1W_RBW_wport_32_17_66880_2_gen
    PORT(
      we : OUT STD_LOGIC;
      d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      wadr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      wadr_d : IN STD_LOGIC_VECTOR (16 DOWNTO 0);
      d_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      we_d : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL image_out_rsci_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL image_out_rsci_wadr : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL image_out_rsci_wadr_d_1 : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL image_out_rsci_d_d_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT conv_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      image_in_rsc_triosy_lz : OUT STD_LOGIC;
      image_out_rsc_triosy_lz : OUT STD_LOGIC;
      image_in_rsci_radr_d : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      image_in_rsci_re_d : OUT STD_LOGIC;
      image_in_rsci_q_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      image_out_rsci_wadr_d : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      image_out_rsci_d_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      image_out_rsci_we_d : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL conv_core_inst_image_in_rsci_radr_d : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL conv_core_inst_image_in_rsci_q_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL conv_core_inst_image_out_rsci_wadr_d : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL conv_core_inst_image_out_rsci_d_d : STD_LOGIC_VECTOR (31 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments

  image_in_rsci : Xilinx_RAMS_BLOCK_1R1W_RBW_rport_32_17_66880_1_gen
    PORT MAP(
      re => image_in_rsc_re,
      q => image_in_rsci_q,
      radr => image_in_rsci_radr,
      radr_d => image_in_rsci_radr_d_1,
      re_d => image_in_rsci_re_d,
      q_d => image_in_rsci_q_d_1
    );
  image_in_rsci_q <= image_in_rsc_q;
  image_in_rsc_radr <= image_in_rsci_radr;
  image_in_rsci_radr_d_1 <= image_in_rsci_radr_d;
  image_in_rsci_q_d <= image_in_rsci_q_d_1;

  image_out_rsci : Xilinx_RAMS_BLOCK_1R1W_RBW_wport_32_17_66880_2_gen
    PORT MAP(
      we => image_out_rsc_we,
      d => image_out_rsci_d,
      wadr => image_out_rsci_wadr,
      wadr_d => image_out_rsci_wadr_d_1,
      d_d => image_out_rsci_d_d_1,
      we_d => image_out_rsci_we_d
    );
  image_out_rsc_d <= image_out_rsci_d;
  image_out_rsc_wadr <= image_out_rsci_wadr;
  image_out_rsci_wadr_d_1 <= image_out_rsci_wadr_d;
  image_out_rsci_d_d_1 <= image_out_rsci_d_d;

  conv_core_inst : conv_core
    PORT MAP(
      clk => clk,
      rst => rst,
      image_in_rsc_triosy_lz => image_in_rsc_triosy_lz,
      image_out_rsc_triosy_lz => image_out_rsc_triosy_lz,
      image_in_rsci_radr_d => conv_core_inst_image_in_rsci_radr_d,
      image_in_rsci_re_d => image_in_rsci_re_d,
      image_in_rsci_q_d => conv_core_inst_image_in_rsci_q_d,
      image_out_rsci_wadr_d => conv_core_inst_image_out_rsci_wadr_d,
      image_out_rsci_d_d => conv_core_inst_image_out_rsci_d_d,
      image_out_rsci_we_d => image_out_rsci_we_d
    );
  image_in_rsci_radr_d <= conv_core_inst_image_in_rsci_radr_d;
  conv_core_inst_image_in_rsci_q_d <= image_in_rsci_q_d;
  image_out_rsci_wadr_d <= conv_core_inst_image_out_rsci_wadr_d;
  image_out_rsci_d_d <= conv_core_inst_image_out_rsci_d_d;

END v1;




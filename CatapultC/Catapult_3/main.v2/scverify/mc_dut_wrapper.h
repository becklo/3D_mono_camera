// Generated by ZYANG
#ifndef INCLUDED_CCS_DUT_WRAPPER_H
#define INCLUDED_CCS_DUT_WRAPPER_H

#ifndef SC_USE_STD_STRING
#define SC_USE_STD_STRING
#endif

#include <systemc.h>
#include <mc_simulator_extensions.h>

#ifdef CCS_SYSC
namespace HDL {
#endif
#if defined(CCS_DUT_SYSC)
// alias ccs_DUT_wrapper to namespace enclosure of either cycle or RTL SystemC netlist
namespace
    ccs_design {
#if defined(CCS_DUT_CYCLE)
#include "cycle.cxx"
#else
#if defined(CCS_DUT_RTL)
#include "rtl.cxx"
#endif
#endif
}
typedef
    ccs_design::HDL::main ccs_DUT_wrapper;

#else

// Create a foreign module wrapper around the HDL
#ifdef VCS_SYSTEMC
// VCS support - ccs_DUT_wrapper is derived from VCS-generated SystemC wrapper around HDL code
class ccs_DUT_wrapper : public TOP_HDL_ENTITY
{
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  : TOP_HDL_ENTITY(nm)
  {
  // elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};

#else
// non VCS simulators - ccs_DUT_wrapper is derived from mc_foreign_module (adding 2nd ctor arg)
class ccs_DUT_wrapper: public mc_foreign_module
{
public:
  // Interface Ports
  sc_in<bool> clk;
  sc_in<sc_logic> rst;
  sc_out<sc_lv<16> > image_net_rsc_addr;
  sc_out<sc_logic> image_net_rsc_re;
  sc_in<sc_lv<32> > image_net_rsc_data_out;
  sc_out<sc_logic> image_net_rsc_triosy_lz;
  sc_out<sc_lv<16> > image_floue_rsc_addr;
  sc_out<sc_logic> image_floue_rsc_re;
  sc_in<sc_lv<32> > image_floue_rsc_data_out;
  sc_out<sc_logic> image_floue_rsc_triosy_lz;
  sc_out<sc_lv<32> > image_error_rsc_data_in;
  sc_out<sc_lv<17> > image_error_rsc_addr;
  sc_out<sc_logic> image_error_rsc_re;
  sc_out<sc_logic> image_error_rsc_we;
  sc_in<sc_lv<32> > image_error_rsc_data_out;
  sc_out<sc_logic> image_error_rsc_triosy_lz;
  sc_out<sc_lv<32> > depth_rsc_data_in;
  sc_out<sc_lv<16> > depth_rsc_addr;
  sc_out<sc_logic> depth_rsc_we;
  sc_out<sc_logic> depth_rsc_triosy_lz;
  sc_out<sc_lv<32> > return_rsc_z;
  sc_out<sc_logic> return_rsc_triosy_lz;
public:
  ccs_DUT_wrapper(const sc_module_name& nm, const char *hdl_name)
  :
    mc_foreign_module(nm, hdl_name), 
    clk("clk"), 
    rst("rst"), 
    image_net_rsc_addr("image_net_rsc_addr"), 
    image_net_rsc_re("image_net_rsc_re"), 
    image_net_rsc_data_out("image_net_rsc_data_out"), 
    image_net_rsc_triosy_lz("image_net_rsc_triosy_lz"), 
    image_floue_rsc_addr("image_floue_rsc_addr"), 
    image_floue_rsc_re("image_floue_rsc_re"), 
    image_floue_rsc_data_out("image_floue_rsc_data_out"), 
    image_floue_rsc_triosy_lz("image_floue_rsc_triosy_lz"), 
    image_error_rsc_data_in("image_error_rsc_data_in"), 
    image_error_rsc_addr("image_error_rsc_addr"), 
    image_error_rsc_re("image_error_rsc_re"), 
    image_error_rsc_we("image_error_rsc_we"), 
    image_error_rsc_data_out("image_error_rsc_data_out"), 
    image_error_rsc_triosy_lz("image_error_rsc_triosy_lz"), 
    depth_rsc_data_in("depth_rsc_data_in"), 
    depth_rsc_addr("depth_rsc_addr"), 
    depth_rsc_we("depth_rsc_we"), 
    depth_rsc_triosy_lz("depth_rsc_triosy_lz"), 
    return_rsc_z("return_rsc_z"), 
    return_rsc_triosy_lz("return_rsc_triosy_lz")
  {
    elaborate_foreign_module(hdl_name);
  }

  ~ccs_DUT_wrapper() {}
};
#endif

#endif

#ifdef CCS_SYSC
} // end namespace HDL
#endif
#endif



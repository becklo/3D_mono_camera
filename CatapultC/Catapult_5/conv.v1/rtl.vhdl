-- ----------------------------------------------------------------------
--  HLS HDL:        VHDL Netlister
--  HLS Version:    10.0a/269363 Production Release
--  HLS Date:       Wed Nov  9 17:38:00 PST 2016
-- 
--  Generated by:   xph3sle509@ocaepc57
--  Generated date: Tue Jan 23 11:05:30 2018
-- ----------------------------------------------------------------------

-- 
-- ------------------------------------------------------------------
--  Design Unit:    ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rwport_5_68256_32_17_0_1_0_0_0_1_1_1_0_68256_32_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rwport_5_68256_32_17_0_1_0_0_0_1_1_1_0_68256_32_1_gen
    IS
  PORT(
    data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    we : OUT STD_LOGIC;
    re : OUT STD_LOGIC;
    addr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    data_in : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    data_in_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (16 DOWNTO 0);
    re_d : IN STD_LOGIC;
    we_d : IN STD_LOGIC;
    data_out_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
  );
END ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rwport_5_68256_32_17_0_1_0_0_0_1_1_1_0_68256_32_1_gen;

ARCHITECTURE v1 OF ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rwport_5_68256_32_17_0_1_0_0_0_1_1_1_0_68256_32_1_gen
    IS
  -- Default Constants

BEGIN
  -- Default Constant Signal Assignments

  data_out_d <= data_out;
  we <= (we_d);
  re <= (re_d);
  addr <= (addr_d);
  data_in <= (data_in_d);
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_4_289_32_9_0_1_0_0_0_1_1_1_0_289_32_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_4_289_32_9_0_1_0_0_0_1_1_1_0_289_32_1_gen
    IS
  PORT(
    data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    re : OUT STD_LOGIC;
    addr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
    re_d : IN STD_LOGIC;
    data_out_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
  );
END ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_4_289_32_9_0_1_0_0_0_1_1_1_0_289_32_1_gen;

ARCHITECTURE v1 OF ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_4_289_32_9_0_1_0_0_0_1_1_1_0_289_32_1_gen
    IS
  -- Default Constants

BEGIN
  -- Default Constant Signal Assignments

  data_out_d <= data_out;
  re <= (re_d);
  addr <= (addr_d);
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_1_60000_32_16_0_1_0_0_0_1_1_1_0_60000_32_1_gen
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_1_60000_32_16_0_1_0_0_0_1_1_1_0_60000_32_1_gen
    IS
  PORT(
    data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    re : OUT STD_LOGIC;
    addr : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    addr_d : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
    re_d : IN STD_LOGIC;
    data_out_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
  );
END ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_1_60000_32_16_0_1_0_0_0_1_1_1_0_60000_32_1_gen;

ARCHITECTURE v1 OF ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_1_60000_32_16_0_1_0_0_0_1_1_1_0_60000_32_1_gen
    IS
  -- Default Constants

BEGIN
  -- Default Constant Signal Assignments

  data_out_d <= data_out;
  re <= (re_d);
  addr <= (addr_d);
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    conv_core_core_fsm
--  FSM Module
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY conv_core_core_fsm IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    fsm_output : OUT STD_LOGIC_VECTOR (10 DOWNTO 0);
    main_C_0_tr0 : IN STD_LOGIC;
    for_C_0_tr0 : IN STD_LOGIC;
    for_for_for_for_C_3_tr0 : IN STD_LOGIC;
    for_for_for_C_1_tr0 : IN STD_LOGIC;
    for_for_C_0_tr0 : IN STD_LOGIC;
    for_C_1_tr0 : IN STD_LOGIC
  );
END conv_core_core_fsm;

ARCHITECTURE v1 OF conv_core_core_fsm IS
  -- Default Constants

  -- FSM State Type Declaration for conv_core_core_fsm_1
  TYPE conv_core_core_fsm_1_ST IS (main_C_0, for_C_0, for_for_for_C_0, for_for_for_for_C_0,
      for_for_for_for_C_1, for_for_for_for_C_2, for_for_for_for_C_3, for_for_for_C_1,
      for_for_C_0, for_C_1, main_C_1);

  SIGNAL state_var : conv_core_core_fsm_1_ST;
  SIGNAL state_var_NS : conv_core_core_fsm_1_ST;

BEGIN
  -- Default Constant Signal Assignments

  conv_core_core_fsm_1 : PROCESS (main_C_0_tr0, for_C_0_tr0, for_for_for_for_C_3_tr0,
      for_for_for_C_1_tr0, for_for_C_0_tr0, for_C_1_tr0, state_var)
  BEGIN
    CASE state_var IS
      WHEN for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "00000000010");
        IF ( for_C_0_tr0 = '1' ) THEN
          state_var_NS <= for_C_1;
        ELSE
          state_var_NS <= for_for_for_C_0;
        END IF;
      WHEN for_for_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "00000000100");
        state_var_NS <= for_for_for_for_C_0;
      WHEN for_for_for_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "00000001000");
        state_var_NS <= for_for_for_for_C_1;
      WHEN for_for_for_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "00000010000");
        state_var_NS <= for_for_for_for_C_2;
      WHEN for_for_for_for_C_2 =>
        fsm_output <= STD_LOGIC_VECTOR'( "00000100000");
        state_var_NS <= for_for_for_for_C_3;
      WHEN for_for_for_for_C_3 =>
        fsm_output <= STD_LOGIC_VECTOR'( "00001000000");
        IF ( for_for_for_for_C_3_tr0 = '1' ) THEN
          state_var_NS <= for_for_for_C_1;
        ELSE
          state_var_NS <= for_for_for_for_C_0;
        END IF;
      WHEN for_for_for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "00010000000");
        IF ( for_for_for_C_1_tr0 = '1' ) THEN
          state_var_NS <= for_for_C_0;
        ELSE
          state_var_NS <= for_for_for_C_0;
        END IF;
      WHEN for_for_C_0 =>
        fsm_output <= STD_LOGIC_VECTOR'( "00100000000");
        IF ( for_for_C_0_tr0 = '1' ) THEN
          state_var_NS <= for_C_1;
        ELSE
          state_var_NS <= for_for_for_C_0;
        END IF;
      WHEN for_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "01000000000");
        IF ( for_C_1_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= for_C_0;
        END IF;
      WHEN main_C_1 =>
        fsm_output <= STD_LOGIC_VECTOR'( "10000000000");
        state_var_NS <= main_C_0;
      -- main_C_0
      WHEN OTHERS =>
        fsm_output <= STD_LOGIC_VECTOR'( "00000000001");
        IF ( main_C_0_tr0 = '1' ) THEN
          state_var_NS <= main_C_1;
        ELSE
          state_var_NS <= for_C_0;
        END IF;
    END CASE;
  END PROCESS conv_core_core_fsm_1;

  conv_core_core_fsm_1_REG : PROCESS (clk)
  BEGIN
    IF clk'event AND ( clk = '1' ) THEN
      IF ( rst = '1' ) THEN
        state_var <= main_C_0;
      ELSE
        state_var <= state_var_NS;
      END IF;
    END IF;
  END PROCESS conv_core_core_fsm_1_REG;

END v1;

-- ------------------------------------------------------------------
--  Design Unit:    conv_core
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY conv_core IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    image_rsc_triosy_lz : OUT STD_LOGIC;
    rows_rsc_z : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    rows_rsc_triosy_lz : OUT STD_LOGIC;
    cols_rsc_z : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    cols_rsc_triosy_lz : OUT STD_LOGIC;
    kernel_rsc_triosy_lz : OUT STD_LOGIC;
    sortie_rsc_triosy_lz : OUT STD_LOGIC;
    image_rsci_addr_d : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    image_rsci_re_d : OUT STD_LOGIC;
    image_rsci_data_out_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    kernel_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    kernel_rsci_data_out_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    sortie_rsci_data_in_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    sortie_rsci_addr_d : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    sortie_rsci_we_d : OUT STD_LOGIC;
    sortie_rsci_data_out_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    kernel_rsci_re_d_pff : OUT STD_LOGIC
  );
END conv_core;

ARCHITECTURE v1 OF conv_core IS
  -- Default Constants

  -- Interconnect Declarations
  SIGNAL rows_rsci_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL cols_rsci_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL fsm_output : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL for_for_for_for_acc_3_tmp : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL or_tmp_9 : STD_LOGIC;
  SIGNAL rows_1_sva_2 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL cols_1_sva_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_i_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_for_j_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_for_for_m_4_0_sva_4 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL for_for_for_acc_1_psp_sva : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL for_for_for_for_n_4_0_sva : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL for_for_for_for_if_acc_psp_sva_1 : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL for_for_for_for_n_4_0_sva_3 : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL for_for_for_for_if_for_for_for_for_if_and_2_itm : STD_LOGIC;
  SIGNAL for_for_for_for_if_asn_7_itm_2 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_for_for_for_if_slc_ii_28_0_itm_2 : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL for_for_for_for_if_slc_jj_15_3_itm_2 : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL for_for_for_for_if_slc_jj_2_0_itm_3 : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL for_for_for_for_if_asn_6_itm_2 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_for_for_for_slc_for_for_for_for_acc_5_itm : STD_LOGIC;
  SIGNAL for_for_for_for_aif_acc_tmp_32 : STD_LOGIC;
  SIGNAL exit_for_sva_mx0 : STD_LOGIC;
  SIGNAL exit_for_for_sva_mx0 : STD_LOGIC;
  SIGNAL jj_sva : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL reg_sortie_rsc_triosy_obj_ld_cse : STD_LOGIC;
  SIGNAL or_cse : STD_LOGIC;
  SIGNAL for_for_for_for_if_acc_psp_sva : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL z_out_1 : STD_LOGIC_VECTOR (32 DOWNTO 0);
  SIGNAL z_out_2 : STD_LOGIC_VECTOR (32 DOWNTO 0);
  SIGNAL z_out_4 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL z_out_4_1 : STD_LOGIC;
  SIGNAL z_out_3_4_0 : STD_LOGIC_VECTOR (4 DOWNTO 0);

  SIGNAL for_for_for_for_acc_17_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL for_for_for_for_acc_16_nl : STD_LOGIC_VECTOR (2 DOWNTO 0);
  SIGNAL for_for_for_for_aif_acc_nl : STD_LOGIC_VECTOR (32 DOWNTO 0);
  SIGNAL for_for_for_for_if_acc_3_nl : STD_LOGIC_VECTOR (12 DOWNTO 0);
  SIGNAL for_for_for_for_acc_15_nl : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL for_for_for_for_acc_18_nl : STD_LOGIC_VECTOR (1 DOWNTO 0);
  SIGNAL sortie_mux_nl : STD_LOGIC_VECTOR (13 DOWNTO 0);
  SIGNAL acc_1_nl : STD_LOGIC_VECTOR (33 DOWNTO 0);
  SIGNAL for_mux1h_4_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_or_3_nl : STD_LOGIC;
  SIGNAL for_mux1h_5_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_or_5_nl : STD_LOGIC;
  SIGNAL for_mux1h_6_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_for_for_mux_3_nl : STD_LOGIC_VECTOR (4 DOWNTO 0);
  SIGNAL for_for_for_for_if_mux1h_15_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL for_for_for_for_if_mux1h_16_nl : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL rows_rsci_d_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL rows_rsci_z : STD_LOGIC_VECTOR (31 DOWNTO 0);

  SIGNAL cols_rsci_d_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL cols_rsci_z : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT conv_core_core_fsm
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      fsm_output : OUT STD_LOGIC_VECTOR (10 DOWNTO 0);
      main_C_0_tr0 : IN STD_LOGIC;
      for_C_0_tr0 : IN STD_LOGIC;
      for_for_for_for_C_3_tr0 : IN STD_LOGIC;
      for_for_for_C_1_tr0 : IN STD_LOGIC;
      for_for_C_0_tr0 : IN STD_LOGIC;
      for_C_1_tr0 : IN STD_LOGIC
    );
  END COMPONENT;
  SIGNAL conv_core_core_fsm_inst_fsm_output : STD_LOGIC_VECTOR (10 DOWNTO 0);
  SIGNAL conv_core_core_fsm_inst_for_for_for_for_C_3_tr0 : STD_LOGIC;
  SIGNAL conv_core_core_fsm_inst_for_for_for_C_1_tr0 : STD_LOGIC;

  FUNCTION MUX1HOT_v_32_3_2(input_2 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(2 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(31 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(31 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
    RETURN result;
  END;

  FUNCTION MUX1HOT_v_32_4_2(input_3 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_2 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_0 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  sel : STD_LOGIC_VECTOR(3 DOWNTO 0))
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(31 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(31 DOWNTO 0);

    BEGIN
      tmp := (OTHERS=>sel(0));
      result := input_0 and tmp;
      tmp := (OTHERS=>sel( 1));
      result := result or ( input_1 and tmp);
      tmp := (OTHERS=>sel( 2));
      result := result or ( input_2 and tmp);
      tmp := (OTHERS=>sel( 3));
      result := result or ( input_3 and tmp);
    RETURN result;
  END;

  FUNCTION MUX_s_1_2_2(input_0 : STD_LOGIC;
  input_1 : STD_LOGIC;
  sel : STD_LOGIC)
  RETURN STD_LOGIC IS
    VARIABLE result : STD_LOGIC;
    VARIABLE tmp : STD_LOGIC;

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_14_2_2(input_0 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(13 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(13 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(13 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_32_2_2(input_0 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(31 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(31 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(31 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

  FUNCTION MUX_v_5_2_2(input_0 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  input_1 : STD_LOGIC_VECTOR(4 DOWNTO 0);
  sel : STD_LOGIC)
  RETURN STD_LOGIC_VECTOR IS
    VARIABLE result : STD_LOGIC_VECTOR(4 DOWNTO 0);
    VARIABLE tmp : STD_LOGIC_VECTOR(4 DOWNTO 0);

    BEGIN
      CASE sel IS
        WHEN '0' =>
          result := input_0;
        WHEN others =>
          result := input_1;
      END CASE;
    RETURN result;
  END;

BEGIN
  -- Default Constant Signal Assignments

  rows_rsci : mgc_hls.mgc_ioport_comps_v11.mgc_in_wire_v1
    GENERIC MAP(
      rscid => 2,
      width => 32
      )
    PORT MAP(
      d => rows_rsci_d_1,
      z => rows_rsci_z
    );
  rows_rsci_d <= rows_rsci_d_1;
  rows_rsci_z <= rows_rsc_z;

  cols_rsci : mgc_hls.mgc_ioport_comps_v11.mgc_in_wire_v1
    GENERIC MAP(
      rscid => 3,
      width => 32
      )
    PORT MAP(
      d => cols_rsci_d_1,
      z => cols_rsci_z
    );
  cols_rsci_d <= cols_rsci_d_1;
  cols_rsci_z <= cols_rsc_z;

  image_rsc_triosy_obj : mgc_hls.mgc_ioport_comps_v11.mgc_io_sync_v1
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_sortie_rsc_triosy_obj_ld_cse,
      lz => image_rsc_triosy_lz
    );
  rows_rsc_triosy_obj : mgc_hls.mgc_ioport_comps_v11.mgc_io_sync_v1
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_sortie_rsc_triosy_obj_ld_cse,
      lz => rows_rsc_triosy_lz
    );
  cols_rsc_triosy_obj : mgc_hls.mgc_ioport_comps_v11.mgc_io_sync_v1
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_sortie_rsc_triosy_obj_ld_cse,
      lz => cols_rsc_triosy_lz
    );
  kernel_rsc_triosy_obj : mgc_hls.mgc_ioport_comps_v11.mgc_io_sync_v1
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_sortie_rsc_triosy_obj_ld_cse,
      lz => kernel_rsc_triosy_lz
    );
  sortie_rsc_triosy_obj : mgc_hls.mgc_ioport_comps_v11.mgc_io_sync_v1
    GENERIC MAP(
      valid => 0
      )
    PORT MAP(
      ld => reg_sortie_rsc_triosy_obj_ld_cse,
      lz => sortie_rsc_triosy_lz
    );
  conv_core_core_fsm_inst : conv_core_core_fsm
    PORT MAP(
      clk => clk,
      rst => rst,
      fsm_output => conv_core_core_fsm_inst_fsm_output,
      main_C_0_tr0 => exit_for_sva_mx0,
      for_C_0_tr0 => exit_for_for_sva_mx0,
      for_for_for_for_C_3_tr0 => conv_core_core_fsm_inst_for_for_for_for_C_3_tr0,
      for_for_for_C_1_tr0 => conv_core_core_fsm_inst_for_for_for_C_1_tr0,
      for_for_C_0_tr0 => exit_for_for_sva_mx0,
      for_C_1_tr0 => exit_for_sva_mx0
    );
  fsm_output <= conv_core_core_fsm_inst_fsm_output;
  conv_core_core_fsm_inst_for_for_for_for_C_3_tr0 <= NOT for_for_for_for_slc_for_for_for_for_acc_5_itm;
  conv_core_core_fsm_inst_for_for_for_C_1_tr0 <= NOT z_out_4_1;

  or_cse <= (fsm_output(0)) OR (fsm_output(9));
  exit_for_sva_mx0 <= MUX_s_1_2_2((NOT (z_out_2(32))), (NOT (z_out_1(32))), fsm_output(9));
  exit_for_for_sva_mx0 <= MUX_s_1_2_2((NOT (z_out_2(32))), (NOT (z_out_1(32))), fsm_output(8));
  for_for_for_for_if_acc_psp_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(z_out_4(13
      DOWNTO 0)) + UNSIGNED(for_for_j_sva(16 DOWNTO 3)), 14));
  for_for_for_for_acc_17_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_for_for_for_n_4_0_sva(4
      DOWNTO 3)) + SIGNED'( "11"), 2));
  jj_sva <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_for_for_for_acc_17_nl),
      2)) & (for_for_for_for_n_4_0_sva(2 DOWNTO 0))), 5), 32) + SIGNED(for_for_j_sva),
      32));
  for_for_for_for_acc_16_nl <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_UNSIGNED(UNSIGNED(for_for_for_m_4_0_sva_4(4
      DOWNTO 3)), 2), 3) + SIGNED'( "111"), 3));
  for_for_for_for_acc_3_tmp <= STD_LOGIC_VECTOR(CONV_SIGNED(CONV_SIGNED(CONV_SIGNED(SIGNED(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_for_for_for_acc_16_nl),
      3)) & (for_for_for_m_4_0_sva_4(2 DOWNTO 0))), 6), 32) + SIGNED(for_i_sva),
      32));
  for_for_for_for_aif_acc_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(for_for_for_for_acc_3_tmp(30
      DOWNTO 0)), 31), 33) - CONV_UNSIGNED(CONV_SIGNED(SIGNED(rows_1_sva_2), 32),
      33), 33));
  for_for_for_for_aif_acc_tmp_32 <= readindex(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_for_aif_acc_nl),
      33)), 32);
  or_tmp_9 <= NOT((fsm_output(10)) OR (fsm_output(0)));
  for_for_for_for_if_acc_3_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(z_out_4(12
      DOWNTO 0)) + UNSIGNED(for_for_for_for_if_slc_jj_15_3_itm_2), 13));
  image_rsci_addr_d <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_for_if_acc_3_nl),
      13)) & for_for_for_for_if_slc_jj_2_0_itm_3;
  image_rsci_re_d <= NOT(for_for_for_for_if_for_for_for_for_if_and_2_itm AND (fsm_output(4)));
  for_for_for_for_acc_18_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(CONV_UNSIGNED(for_for_for_acc_1_psp_sva(4),
      1), 1), 2) + UNSIGNED'( "01"), 2));
  for_for_for_for_acc_15_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_acc_1_psp_sva
      & STD_LOGIC_VECTOR'( "0001")) + CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_for_acc_18_nl),
      2)) & (for_for_for_acc_1_psp_sva(3 DOWNTO 0))), 6), 9), 9));
  kernel_rsci_addr_d <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(UNSIGNED(for_for_for_for_acc_15_nl),
      9) + UNSIGNED(STD_LOGIC_VECTOR'( "1111") & (NOT for_for_for_for_n_4_0_sva)),
      9));
  kernel_rsci_re_d_pff <= NOT((NOT (for_for_for_for_acc_3_tmp(31))) AND for_for_for_for_aif_acc_tmp_32
      AND (NOT (jj_sva(31))) AND (z_out_1(32)) AND (fsm_output(3)));
  sortie_mux_nl <= MUX_v_14_2_2(for_for_for_for_if_acc_psp_sva, for_for_for_for_if_acc_psp_sva_1,
      fsm_output(5));
  sortie_rsci_addr_d <= sortie_mux_nl & (for_for_j_sva(2 DOWNTO 0));
  sortie_rsci_we_d <= NOT(for_for_for_for_if_for_for_for_for_if_and_2_itm AND (fsm_output(5)));
  sortie_rsci_data_in_d <= z_out_1(31 DOWNTO 0);
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        reg_sortie_rsc_triosy_obj_ld_cse <= '0';
        for_for_for_for_n_4_0_sva <= STD_LOGIC_VECTOR'( "00000");
        for_for_for_for_if_slc_jj_2_0_itm_3 <= STD_LOGIC_VECTOR'( "000");
        for_for_for_for_if_slc_jj_15_3_itm_2 <= STD_LOGIC_VECTOR'( "0000000000000");
        for_for_for_for_if_slc_ii_28_0_itm_2 <= STD_LOGIC_VECTOR'( "0000000000000");
        for_for_for_for_if_asn_6_itm_2 <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
        for_for_for_for_if_asn_7_itm_2 <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      ELSE
        reg_sortie_rsc_triosy_obj_ld_cse <= or_cse AND exit_for_sva_mx0;
        for_for_for_for_n_4_0_sva <= MUX_v_5_2_2(STD_LOGIC_VECTOR'("00000"), for_for_for_for_n_4_0_sva_3,
            (fsm_output(6)));
        for_for_for_for_if_slc_jj_2_0_itm_3 <= jj_sva(2 DOWNTO 0);
        for_for_for_for_if_slc_jj_15_3_itm_2 <= jj_sva(15 DOWNTO 3);
        for_for_for_for_if_slc_ii_28_0_itm_2 <= for_for_for_for_acc_3_tmp(12 DOWNTO
            0);
        for_for_for_for_if_asn_6_itm_2 <= kernel_rsci_data_out_d;
        for_for_for_for_if_asn_7_itm_2 <= sortie_rsci_data_out_d;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        rows_1_sva_2 <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      ELSIF ( or_tmp_9 = '0' ) THEN
        rows_1_sva_2 <= rows_rsci_d;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_i_sva <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      ELSIF ( or_cse = '1' ) THEN
        for_i_sva <= MUX_v_32_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000"),
            (z_out_2(31 DOWNTO 0)), (fsm_output(9)));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        cols_1_sva_1 <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      ELSIF ( or_tmp_9 = '0' ) THEN
        cols_1_sva_1 <= cols_rsci_d;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_j_sva <= STD_LOGIC_VECTOR'( "00000000000000000000000000000000");
      ELSIF ( ((fsm_output(1)) OR (fsm_output(8))) = '1' ) THEN
        for_for_j_sva <= MUX_v_32_2_2(STD_LOGIC_VECTOR'("00000000000000000000000000000000"),
            (z_out_2(31 DOWNTO 0)), (fsm_output(8)));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_for_m_4_0_sva_4 <= STD_LOGIC_VECTOR'( "00000");
      ELSIF ( ((fsm_output(8)) OR (fsm_output(1)) OR (fsm_output(7))) = '1' ) THEN
        for_for_for_m_4_0_sva_4 <= MUX_v_5_2_2(STD_LOGIC_VECTOR'("00000"), z_out_3_4_0,
            (fsm_output(7)));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_for_acc_1_psp_sva <= STD_LOGIC_VECTOR'( "00000");
      ELSIF ( (NOT(TO_STDLOGIC(fsm_output(6 DOWNTO 3)/=STD_LOGIC_VECTOR'("0000"))))
          = '1' ) THEN
        for_for_for_acc_1_psp_sva <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(NOT
            for_for_for_m_4_0_sva_4) + UNSIGNED'( "10001"), 5));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_for_for_if_acc_psp_sva_1 <= STD_LOGIC_VECTOR'( "00000000000000");
      ELSIF ( (fsm_output(4)) = '0' ) THEN
        for_for_for_for_if_acc_psp_sva_1 <= for_for_for_for_if_acc_psp_sva;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_for_for_slc_for_for_for_for_acc_5_itm <= '0';
      ELSIF ( (fsm_output(3)) = '1' ) THEN
        for_for_for_for_slc_for_for_for_for_acc_5_itm <= z_out_4_1;
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_for_for_if_for_for_for_for_if_and_2_itm <= '0';
      ELSIF ( (fsm_output(3)) = '1' ) THEN
        for_for_for_for_if_for_for_for_for_if_and_2_itm <= (z_out_1(32)) AND (NOT
            (jj_sva(31))) AND for_for_for_for_aif_acc_tmp_32 AND (NOT (for_for_for_for_acc_3_tmp(31)));
      END IF;
    END IF;
  END PROCESS;
  PROCESS (clk)
  BEGIN
    IF clk'EVENT AND ( clk = '1' ) THEN
      IF (rst = '1') THEN
        for_for_for_for_n_4_0_sva_3 <= STD_LOGIC_VECTOR'( "00000");
      ELSIF ( (fsm_output(3)) = '1' ) THEN
        for_for_for_for_n_4_0_sva_3 <= z_out_3_4_0;
      END IF;
    END IF;
  END PROCESS;
  z_out_4_1 <= (z_out_3_4_0(4)) XOR (TO_STDLOGIC(z_out_3_4_0(3 DOWNTO 0)/=STD_LOGIC_VECTOR'("0000")));
  for_or_3_nl <= TO_STDLOGIC(fsm_output(9 DOWNTO 8)/=STD_LOGIC_VECTOR'("00"));
  for_mux1h_4_nl <= MUX1HOT_v_32_3_2((z_out_2(31 DOWNTO 0)), jj_sva, for_for_for_for_if_asn_7_itm_2,
      STD_LOGIC_VECTOR'( for_or_3_nl & (fsm_output(3)) & (fsm_output(5))));
  for_or_5_nl <= (fsm_output(8)) OR (fsm_output(3));
  for_mux1h_5_nl <= MUX1HOT_v_32_3_2((NOT rows_1_sva_2), (NOT cols_1_sva_1), z_out_4,
      STD_LOGIC_VECTOR'( (fsm_output(9)) & for_or_5_nl & (fsm_output(5))));
  acc_1_nl <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(CONV_SIGNED(SIGNED(for_mux1h_4_nl
      & (NOT (fsm_output(5)))), 33), 34) + CONV_UNSIGNED(CONV_SIGNED(SIGNED(for_mux1h_5_nl
      & '1'), 33), 34), 34));
  z_out_1 <= readslice(STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(acc_1_nl), 34)), 1,
      33);
  for_mux1h_6_nl <= MUX1HOT_v_32_4_2((NOT rows_rsci_d), for_i_sva, (NOT cols_1_sva_1),
      for_for_j_sva, STD_LOGIC_VECTOR'( (fsm_output(0)) & (fsm_output(9)) & (fsm_output(1))
      & (fsm_output(8))));
  z_out_2 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(CONV_UNSIGNED(SIGNED(for_mux1h_6_nl),
      33) + UNSIGNED'( "000000000000000000000000000000001"), 33));
  for_for_for_mux_3_nl <= MUX_v_5_2_2(for_for_for_m_4_0_sva_4, for_for_for_for_n_4_0_sva,
      fsm_output(3));
  z_out_3_4_0 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED(for_for_for_mux_3_nl) +
      UNSIGNED'( "00001"), 5));
  for_for_for_for_if_mux1h_15_nl <= MUX1HOT_v_32_3_2(STD_LOGIC_VECTOR(CONV_SIGNED(SIGNED(for_i_sva(13
      DOWNTO 0)),32)), (STD_LOGIC_VECTOR'( "0000000000000000000") & for_for_for_for_if_slc_ii_28_0_itm_2),
      image_rsci_data_out_d, STD_LOGIC_VECTOR'( (fsm_output(3)) & (fsm_output(4))
      & (fsm_output(5))));
  for_for_for_for_if_mux1h_16_nl <= MUX1HOT_v_32_3_2(STD_LOGIC_VECTOR'( "00000000000000000000000000011011"),
      STD_LOGIC_VECTOR'( "00000000000000000000000000011001"), for_for_for_for_if_asn_6_itm_2,
      STD_LOGIC_VECTOR'( (fsm_output(3)) & (fsm_output(4)) & (fsm_output(5))));
  z_out_4 <= STD_LOGIC_VECTOR(CONV_UNSIGNED(UNSIGNED'( UNSIGNED(for_for_for_for_if_mux1h_15_nl)
      * UNSIGNED(for_for_for_for_if_mux1h_16_nl)), 32));
END v1;

-- ------------------------------------------------------------------
--  Design Unit:    conv
-- ------------------------------------------------------------------

LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_ARITH.ALL;
LIBRARY mgc_hls;
USE mgc_hls.funcs.ALL;
USE mgc_hls.mgc_ioport_comps_v11.ALL;


ENTITY conv IS
  PORT(
    clk : IN STD_LOGIC;
    rst : IN STD_LOGIC;
    image_rsc_addr : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
    image_rsc_re : OUT STD_LOGIC;
    image_rsc_data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    image_rsc_triosy_lz : OUT STD_LOGIC;
    rows_rsc_z : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    rows_rsc_triosy_lz : OUT STD_LOGIC;
    cols_rsc_z : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    cols_rsc_triosy_lz : OUT STD_LOGIC;
    kernel_rsc_addr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
    kernel_rsc_re : OUT STD_LOGIC;
    kernel_rsc_data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    kernel_rsc_triosy_lz : OUT STD_LOGIC;
    sortie_rsc_data_in : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
    sortie_rsc_addr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
    sortie_rsc_re : OUT STD_LOGIC;
    sortie_rsc_we : OUT STD_LOGIC;
    sortie_rsc_data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
    sortie_rsc_triosy_lz : OUT STD_LOGIC
  );
END conv;

ARCHITECTURE v1 OF conv IS
  -- Default Constants
  SIGNAL PWR : STD_LOGIC;
  SIGNAL GND : STD_LOGIC;

  -- Interconnect Declarations
  SIGNAL image_rsci_addr_d : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL image_rsci_re_d : STD_LOGIC;
  SIGNAL image_rsci_data_out_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL kernel_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL kernel_rsci_data_out_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL sortie_rsci_data_in_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL sortie_rsci_addr_d : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL sortie_rsci_we_d : STD_LOGIC;
  SIGNAL sortie_rsci_data_out_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL kernel_rsci_re_d_iff : STD_LOGIC;

  COMPONENT ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_1_60000_32_16_0_1_0_0_0_1_1_1_0_60000_32_1_gen
    PORT(
      data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      re : OUT STD_LOGIC;
      addr : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (15 DOWNTO 0);
      re_d : IN STD_LOGIC;
      data_out_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL image_rsci_data_out : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL image_rsci_addr : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL image_rsci_addr_d_1 : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL image_rsci_data_out_d_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_4_289_32_9_0_1_0_0_0_1_1_1_0_289_32_1_gen
    PORT(
      data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      re : OUT STD_LOGIC;
      addr : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (8 DOWNTO 0);
      re_d : IN STD_LOGIC;
      data_out_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL kernel_rsci_data_out : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL kernel_rsci_addr : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL kernel_rsci_addr_d_1 : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL kernel_rsci_data_out_d_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rwport_5_68256_32_17_0_1_0_0_0_1_1_1_0_68256_32_1_gen
    PORT(
      data_out : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      we : OUT STD_LOGIC;
      re : OUT STD_LOGIC;
      addr : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      data_in : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      data_in_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      addr_d : IN STD_LOGIC_VECTOR (16 DOWNTO 0);
      re_d : IN STD_LOGIC;
      we_d : IN STD_LOGIC;
      data_out_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0)
    );
  END COMPONENT;
  SIGNAL sortie_rsci_data_out : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL sortie_rsci_addr : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL sortie_rsci_data_in : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL sortie_rsci_data_in_d_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL sortie_rsci_addr_d_1 : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL sortie_rsci_data_out_d_1 : STD_LOGIC_VECTOR (31 DOWNTO 0);

  COMPONENT conv_core
    PORT(
      clk : IN STD_LOGIC;
      rst : IN STD_LOGIC;
      image_rsc_triosy_lz : OUT STD_LOGIC;
      rows_rsc_z : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      rows_rsc_triosy_lz : OUT STD_LOGIC;
      cols_rsc_z : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      cols_rsc_triosy_lz : OUT STD_LOGIC;
      kernel_rsc_triosy_lz : OUT STD_LOGIC;
      sortie_rsc_triosy_lz : OUT STD_LOGIC;
      image_rsci_addr_d : OUT STD_LOGIC_VECTOR (15 DOWNTO 0);
      image_rsci_re_d : OUT STD_LOGIC;
      image_rsci_data_out_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      kernel_rsci_addr_d : OUT STD_LOGIC_VECTOR (8 DOWNTO 0);
      kernel_rsci_data_out_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      sortie_rsci_data_in_d : OUT STD_LOGIC_VECTOR (31 DOWNTO 0);
      sortie_rsci_addr_d : OUT STD_LOGIC_VECTOR (16 DOWNTO 0);
      sortie_rsci_we_d : OUT STD_LOGIC;
      sortie_rsci_data_out_d : IN STD_LOGIC_VECTOR (31 DOWNTO 0);
      kernel_rsci_re_d_pff : OUT STD_LOGIC
    );
  END COMPONENT;
  SIGNAL conv_core_inst_rows_rsc_z : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL conv_core_inst_cols_rsc_z : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL conv_core_inst_image_rsci_addr_d : STD_LOGIC_VECTOR (15 DOWNTO 0);
  SIGNAL conv_core_inst_image_rsci_data_out_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL conv_core_inst_kernel_rsci_addr_d : STD_LOGIC_VECTOR (8 DOWNTO 0);
  SIGNAL conv_core_inst_kernel_rsci_data_out_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL conv_core_inst_sortie_rsci_data_in_d : STD_LOGIC_VECTOR (31 DOWNTO 0);
  SIGNAL conv_core_inst_sortie_rsci_addr_d : STD_LOGIC_VECTOR (16 DOWNTO 0);
  SIGNAL conv_core_inst_sortie_rsci_data_out_d : STD_LOGIC_VECTOR (31 DOWNTO 0);

BEGIN
  -- Default Constant Signal Assignments
  PWR <= '1';
  GND <= '0';

  image_rsci : ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_1_60000_32_16_0_1_0_0_0_1_1_1_0_60000_32_1_gen
    PORT MAP(
      data_out => image_rsci_data_out,
      re => image_rsc_re,
      addr => image_rsci_addr,
      addr_d => image_rsci_addr_d_1,
      re_d => image_rsci_re_d,
      data_out_d => image_rsci_data_out_d_1
    );
  image_rsci_data_out <= image_rsc_data_out;
  image_rsc_addr <= image_rsci_addr;
  image_rsci_addr_d_1 <= image_rsci_addr_d;
  image_rsci_data_out_d <= image_rsci_data_out_d_1;

  kernel_rsci : ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rport_4_289_32_9_0_1_0_0_0_1_1_1_0_289_32_1_gen
    PORT MAP(
      data_out => kernel_rsci_data_out,
      re => kernel_rsc_re,
      addr => kernel_rsci_addr,
      addr_d => kernel_rsci_addr_d_1,
      re_d => kernel_rsci_re_d_iff,
      data_out_d => kernel_rsci_data_out_d_1
    );
  kernel_rsci_data_out <= kernel_rsc_data_out;
  kernel_rsc_addr <= kernel_rsci_addr;
  kernel_rsci_addr_d_1 <= kernel_rsci_addr_d;
  kernel_rsci_data_out_d <= kernel_rsci_data_out_d_1;

  sortie_rsci : ram_Xilinx_ARTIX_7_3_RAMSB_singleport_rwport_5_68256_32_17_0_1_0_0_0_1_1_1_0_68256_32_1_gen
    PORT MAP(
      data_out => sortie_rsci_data_out,
      we => sortie_rsc_we,
      re => sortie_rsc_re,
      addr => sortie_rsci_addr,
      data_in => sortie_rsci_data_in,
      data_in_d => sortie_rsci_data_in_d_1,
      addr_d => sortie_rsci_addr_d_1,
      re_d => kernel_rsci_re_d_iff,
      we_d => sortie_rsci_we_d,
      data_out_d => sortie_rsci_data_out_d_1
    );
  sortie_rsci_data_out <= sortie_rsc_data_out;
  sortie_rsc_addr <= sortie_rsci_addr;
  sortie_rsc_data_in <= sortie_rsci_data_in;
  sortie_rsci_data_in_d_1 <= sortie_rsci_data_in_d;
  sortie_rsci_addr_d_1 <= sortie_rsci_addr_d;
  sortie_rsci_data_out_d <= sortie_rsci_data_out_d_1;

  conv_core_inst : conv_core
    PORT MAP(
      clk => clk,
      rst => rst,
      image_rsc_triosy_lz => image_rsc_triosy_lz,
      rows_rsc_z => conv_core_inst_rows_rsc_z,
      rows_rsc_triosy_lz => rows_rsc_triosy_lz,
      cols_rsc_z => conv_core_inst_cols_rsc_z,
      cols_rsc_triosy_lz => cols_rsc_triosy_lz,
      kernel_rsc_triosy_lz => kernel_rsc_triosy_lz,
      sortie_rsc_triosy_lz => sortie_rsc_triosy_lz,
      image_rsci_addr_d => conv_core_inst_image_rsci_addr_d,
      image_rsci_re_d => image_rsci_re_d,
      image_rsci_data_out_d => conv_core_inst_image_rsci_data_out_d,
      kernel_rsci_addr_d => conv_core_inst_kernel_rsci_addr_d,
      kernel_rsci_data_out_d => conv_core_inst_kernel_rsci_data_out_d,
      sortie_rsci_data_in_d => conv_core_inst_sortie_rsci_data_in_d,
      sortie_rsci_addr_d => conv_core_inst_sortie_rsci_addr_d,
      sortie_rsci_we_d => sortie_rsci_we_d,
      sortie_rsci_data_out_d => conv_core_inst_sortie_rsci_data_out_d,
      kernel_rsci_re_d_pff => kernel_rsci_re_d_iff
    );
  conv_core_inst_rows_rsc_z <= rows_rsc_z;
  conv_core_inst_cols_rsc_z <= cols_rsc_z;
  image_rsci_addr_d <= conv_core_inst_image_rsci_addr_d;
  conv_core_inst_image_rsci_data_out_d <= image_rsci_data_out_d;
  kernel_rsci_addr_d <= conv_core_inst_kernel_rsci_addr_d;
  conv_core_inst_kernel_rsci_data_out_d <= kernel_rsci_data_out_d;
  sortie_rsci_data_in_d <= conv_core_inst_sortie_rsci_data_in_d;
  sortie_rsci_addr_d <= conv_core_inst_sortie_rsci_addr_d;
  conv_core_inst_sortie_rsci_data_out_d <= sortie_rsci_data_out_d;

END v1;



